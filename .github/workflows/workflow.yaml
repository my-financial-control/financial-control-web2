name: React Vite Workflow
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Setup Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test --if-present

      - name: Build app
        run: yarn build

  docker:
    needs: build
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set_image_name.outputs.IMAGE_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set Docker image name
        id: set_image_name
        run: |
          echo "IMAGE_NAME=${{ vars.DOCKER_HUB_USER }}/financial-control-web:${{ github.ref_name }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.set_image_name.outputs.IMAGE_NAME }}

  deploy:
    needs: build
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Setup Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install

      - name: Build app
        run: yarn build

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel --prod --token $VERCEL_TOKEN --yes
